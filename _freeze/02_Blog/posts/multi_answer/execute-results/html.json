{
  "hash": "e84f6f30d270da6500bdcc7d74598a3c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: マルチアンサーの処理\ndate: 2024-06-05\ncategories: [Others]\nengine: knitr\n---\n\n\n## パッケージ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Googleフォームなどのマルチアンサーの処理\n\ngoogleフォームでマルチアンサー形式の設問を作ると、以下のようにカンマで区切られた形式でデータが入力される。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- \n  tibble(\n    q1 = c('A,B,C', 'A,B', 'A,C', 'B,C', 'A', 'B', 'C'),\n  ) |> \n  mutate(id = row_number()) |> \n  relocate(id, .before = q1) \n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 2\n     id q1   \n  <int> <chr>\n1     1 A,B,C\n2     2 A,B  \n3     3 A,C  \n4     4 B,C  \n5     5 A    \n6     6 B    \n7     7 C    \n```\n\n\n:::\n:::\n\n\nまずはカンマで区切られているやつを分割する。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  separate_longer_delim(cols = q1, delim = ',') \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 2\n      id q1   \n   <int> <chr>\n 1     1 A    \n 2     1 B    \n 3     1 C    \n 4     2 A    \n 5     2 B    \n 6     3 A    \n 7     3 C    \n 8     4 B    \n 9     4 C    \n10     5 A    \n11     6 B    \n12     7 C    \n```\n\n\n:::\n:::\n\n\nこのデータの意味自体は、id:1はA,B,Cを選択した、というものである。\n\nなのでフラグとして1を立てておく。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  separate_longer_delim(cols = q1, delim = ',') |>\n  mutate(flag = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 3\n      id q1     flag\n   <int> <chr> <dbl>\n 1     1 A         1\n 2     1 B         1\n 3     1 C         1\n 4     2 A         1\n 5     2 B         1\n 6     3 A         1\n 7     3 C         1\n 8     4 B         1\n 9     4 C         1\n10     5 A         1\n11     6 B         1\n12     7 C         1\n```\n\n\n:::\n:::\n\n\nつぎにこれを横持ちに展開する。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  separate_longer_delim(cols = q1, delim = ',') |>\n  mutate(flag = 1) |> \n  pivot_wider(names_from = q1, values_from = flag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n     id     A     B     C\n  <int> <dbl> <dbl> <dbl>\n1     1     1     1     1\n2     2     1     1    NA\n3     3     1    NA     1\n4     4    NA     1     1\n5     5     1    NA    NA\n6     6    NA     1    NA\n7     7    NA    NA     1\n```\n\n\n:::\n:::\n\n\nこれで、A,B,Cの選択状況がわかるようになった。\n\n非選択がNAになっているのは少々アレなので、0で埋めるようにする。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  separate_longer_delim(cols = q1, delim = ',') |>\n  mutate(flag = 1) |> \n  pivot_wider(names_from = q1, values_from = flag, values_fill = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n     id     A     B     C\n  <int> <dbl> <dbl> <dbl>\n1     1     1     1     1\n2     2     1     1     0\n3     3     1     0     1\n4     4     0     1     1\n5     5     1     0     0\n6     6     0     1     0\n7     7     0     0     1\n```\n\n\n:::\n:::\n\n\nこれでダミー変数に変換できた。\n\nもともとの変数名であるq1が消えてしまっているので、それを残すには`names_prefix`を指定する。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  separate_longer_delim(cols = q1, delim = ',') |>\n  mutate(flag = 1) |> \n  pivot_wider(\n    names_from = q1, \n    names_prefix = 'q1_', \n    values_from = flag, \n    values_fill = 0\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n     id  q1_A  q1_B  q1_C\n  <int> <dbl> <dbl> <dbl>\n1     1     1     1     1\n2     2     1     1     0\n3     3     1     0     1\n4     4     0     1     1\n5     5     1     0     0\n6     6     0     1     0\n7     7     0     0     1\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}