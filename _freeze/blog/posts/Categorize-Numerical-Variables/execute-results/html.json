{
  "hash": "e5fb55757caba1d528f0fba86de21eeb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Rで連続変数のカテゴリ化\ndate: 2024-11-25\ncategories: [R]\n---\n\n\n\n\n## データ\n\n- いま1から100までの連続変数があるとする\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndata <- \n  tibble(\n    x = 1:100\n  )\n\ndata |> print(n = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 1\n        x\n    <int>\n  1     1\n  2     2\n  3     3\n  4     4\n  5     5\n  6     6\n  7     7\n  8     8\n  9     9\n 10    10\n 11    11\n 12    12\n 13    13\n 14    14\n 15    15\n 16    16\n 17    17\n 18    18\n 19    19\n 20    20\n 21    21\n 22    22\n 23    23\n 24    24\n 25    25\n 26    26\n 27    27\n 28    28\n 29    29\n 30    30\n 31    31\n 32    32\n 33    33\n 34    34\n 35    35\n 36    36\n 37    37\n 38    38\n 39    39\n 40    40\n 41    41\n 42    42\n 43    43\n 44    44\n 45    45\n 46    46\n 47    47\n 48    48\n 49    49\n 50    50\n 51    51\n 52    52\n 53    53\n 54    54\n 55    55\n 56    56\n 57    57\n 58    58\n 59    59\n 60    60\n 61    61\n 62    62\n 63    63\n 64    64\n 65    65\n 66    66\n 67    67\n 68    68\n 69    69\n 70    70\n 71    71\n 72    72\n 73    73\n 74    74\n 75    75\n 76    76\n 77    77\n 78    78\n 79    79\n 80    80\n 81    81\n 82    82\n 83    83\n 84    84\n 85    85\n 86    86\n 87    87\n 88    88\n 89    89\n 90    90\n 91    91\n 92    92\n 93    93\n 94    94\n 95    95\n 96    96\n 97    97\n 98    98\n 99    99\n100   100\n```\n\n\n:::\n:::\n\n\n\n\n## カテゴリ化\n\n- 連続変数を0-25%, 25%-50%, 50%-75%, 75%-100%の4つのカテゴリに分ける\n- `cut`と`quantile`を組み合わせるとうまくいく\n- 1から25がQ1, 26から50がQ2, 51から75がQ3, 76から100がQ4になる\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  mutate(\n    x_cut = cut(\n      x,\n      breaks = quantile(x, probs = c(0, 1/4, 2/4, 3/4, 1)),\n      include.lowest = TRUE\n    ),\n    x_cut2 = cut(\n      x,\n      breaks = quantile(x, probs = c(0, 1/4, 2/4, 3/4, 1)),\n      # ラベルを指定することもできる\n      labels = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\"),\n      include.lowest = TRUE\n    ),\n    # 区間を左端で閉じるか右端で閉じるかを指定できる\n    x_cut3 = cut(\n      x,\n      breaks = quantile(x, probs = c(0, 1/4, 2/4, 3/4, 1)),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |> \n  print(n = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 4\n        x x_cut       x_cut2 x_cut3     \n    <int> <fct>       <fct>  <fct>      \n  1     1 [1,25.8]    Q1     [1,25.8)   \n  2     2 [1,25.8]    Q1     [1,25.8)   \n  3     3 [1,25.8]    Q1     [1,25.8)   \n  4     4 [1,25.8]    Q1     [1,25.8)   \n  5     5 [1,25.8]    Q1     [1,25.8)   \n  6     6 [1,25.8]    Q1     [1,25.8)   \n  7     7 [1,25.8]    Q1     [1,25.8)   \n  8     8 [1,25.8]    Q1     [1,25.8)   \n  9     9 [1,25.8]    Q1     [1,25.8)   \n 10    10 [1,25.8]    Q1     [1,25.8)   \n 11    11 [1,25.8]    Q1     [1,25.8)   \n 12    12 [1,25.8]    Q1     [1,25.8)   \n 13    13 [1,25.8]    Q1     [1,25.8)   \n 14    14 [1,25.8]    Q1     [1,25.8)   \n 15    15 [1,25.8]    Q1     [1,25.8)   \n 16    16 [1,25.8]    Q1     [1,25.8)   \n 17    17 [1,25.8]    Q1     [1,25.8)   \n 18    18 [1,25.8]    Q1     [1,25.8)   \n 19    19 [1,25.8]    Q1     [1,25.8)   \n 20    20 [1,25.8]    Q1     [1,25.8)   \n 21    21 [1,25.8]    Q1     [1,25.8)   \n 22    22 [1,25.8]    Q1     [1,25.8)   \n 23    23 [1,25.8]    Q1     [1,25.8)   \n 24    24 [1,25.8]    Q1     [1,25.8)   \n 25    25 [1,25.8]    Q1     [1,25.8)   \n 26    26 (25.8,50.5] Q2     [25.8,50.5)\n 27    27 (25.8,50.5] Q2     [25.8,50.5)\n 28    28 (25.8,50.5] Q2     [25.8,50.5)\n 29    29 (25.8,50.5] Q2     [25.8,50.5)\n 30    30 (25.8,50.5] Q2     [25.8,50.5)\n 31    31 (25.8,50.5] Q2     [25.8,50.5)\n 32    32 (25.8,50.5] Q2     [25.8,50.5)\n 33    33 (25.8,50.5] Q2     [25.8,50.5)\n 34    34 (25.8,50.5] Q2     [25.8,50.5)\n 35    35 (25.8,50.5] Q2     [25.8,50.5)\n 36    36 (25.8,50.5] Q2     [25.8,50.5)\n 37    37 (25.8,50.5] Q2     [25.8,50.5)\n 38    38 (25.8,50.5] Q2     [25.8,50.5)\n 39    39 (25.8,50.5] Q2     [25.8,50.5)\n 40    40 (25.8,50.5] Q2     [25.8,50.5)\n 41    41 (25.8,50.5] Q2     [25.8,50.5)\n 42    42 (25.8,50.5] Q2     [25.8,50.5)\n 43    43 (25.8,50.5] Q2     [25.8,50.5)\n 44    44 (25.8,50.5] Q2     [25.8,50.5)\n 45    45 (25.8,50.5] Q2     [25.8,50.5)\n 46    46 (25.8,50.5] Q2     [25.8,50.5)\n 47    47 (25.8,50.5] Q2     [25.8,50.5)\n 48    48 (25.8,50.5] Q2     [25.8,50.5)\n 49    49 (25.8,50.5] Q2     [25.8,50.5)\n 50    50 (25.8,50.5] Q2     [25.8,50.5)\n 51    51 (50.5,75.2] Q3     [50.5,75.2)\n 52    52 (50.5,75.2] Q3     [50.5,75.2)\n 53    53 (50.5,75.2] Q3     [50.5,75.2)\n 54    54 (50.5,75.2] Q3     [50.5,75.2)\n 55    55 (50.5,75.2] Q3     [50.5,75.2)\n 56    56 (50.5,75.2] Q3     [50.5,75.2)\n 57    57 (50.5,75.2] Q3     [50.5,75.2)\n 58    58 (50.5,75.2] Q3     [50.5,75.2)\n 59    59 (50.5,75.2] Q3     [50.5,75.2)\n 60    60 (50.5,75.2] Q3     [50.5,75.2)\n 61    61 (50.5,75.2] Q3     [50.5,75.2)\n 62    62 (50.5,75.2] Q3     [50.5,75.2)\n 63    63 (50.5,75.2] Q3     [50.5,75.2)\n 64    64 (50.5,75.2] Q3     [50.5,75.2)\n 65    65 (50.5,75.2] Q3     [50.5,75.2)\n 66    66 (50.5,75.2] Q3     [50.5,75.2)\n 67    67 (50.5,75.2] Q3     [50.5,75.2)\n 68    68 (50.5,75.2] Q3     [50.5,75.2)\n 69    69 (50.5,75.2] Q3     [50.5,75.2)\n 70    70 (50.5,75.2] Q3     [50.5,75.2)\n 71    71 (50.5,75.2] Q3     [50.5,75.2)\n 72    72 (50.5,75.2] Q3     [50.5,75.2)\n 73    73 (50.5,75.2] Q3     [50.5,75.2)\n 74    74 (50.5,75.2] Q3     [50.5,75.2)\n 75    75 (50.5,75.2] Q3     [50.5,75.2)\n 76    76 (75.2,100]  Q4     [75.2,100] \n 77    77 (75.2,100]  Q4     [75.2,100] \n 78    78 (75.2,100]  Q4     [75.2,100] \n 79    79 (75.2,100]  Q4     [75.2,100] \n 80    80 (75.2,100]  Q4     [75.2,100] \n 81    81 (75.2,100]  Q4     [75.2,100] \n 82    82 (75.2,100]  Q4     [75.2,100] \n 83    83 (75.2,100]  Q4     [75.2,100] \n 84    84 (75.2,100]  Q4     [75.2,100] \n 85    85 (75.2,100]  Q4     [75.2,100] \n 86    86 (75.2,100]  Q4     [75.2,100] \n 87    87 (75.2,100]  Q4     [75.2,100] \n 88    88 (75.2,100]  Q4     [75.2,100] \n 89    89 (75.2,100]  Q4     [75.2,100] \n 90    90 (75.2,100]  Q4     [75.2,100] \n 91    91 (75.2,100]  Q4     [75.2,100] \n 92    92 (75.2,100]  Q4     [75.2,100] \n 93    93 (75.2,100]  Q4     [75.2,100] \n 94    94 (75.2,100]  Q4     [75.2,100] \n 95    95 (75.2,100]  Q4     [75.2,100] \n 96    96 (75.2,100]  Q4     [75.2,100] \n 97    97 (75.2,100]  Q4     [75.2,100] \n 98    98 (75.2,100]  Q4     [75.2,100] \n 99    99 (75.2,100]  Q4     [75.2,100] \n100   100 (75.2,100]  Q4     [75.2,100] \n```\n\n\n:::\n:::\n\n\n\n- 3分割だとこんな感じ\n- 100人を3分割すると1人あまるので、34人目までが最初の区間となっている\n- `right = FALSE`にすると、33人目までが最初の区間となり、最後の区間が34人になる\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  mutate(\n    x_cut = cut(\n      x,\n      breaks = quantile(x, probs = c(0, 1/3, 2/3, 1)),\n      include.lowest = TRUE\n    ),\n    x_cut2 = cut(\n      x,\n      breaks = quantile(x, probs = c(0, 1/3, 2/3, 1)),\n      include.lowest = TRUE,\n      right = FALSE\n    ),\n  ) |> \n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 3\n        x x_cut    x_cut2  \n    <int> <fct>    <fct>   \n  1     1 [1,34]   [1,34)  \n  2     2 [1,34]   [1,34)  \n  3     3 [1,34]   [1,34)  \n  4     4 [1,34]   [1,34)  \n  5     5 [1,34]   [1,34)  \n  6     6 [1,34]   [1,34)  \n  7     7 [1,34]   [1,34)  \n  8     8 [1,34]   [1,34)  \n  9     9 [1,34]   [1,34)  \n 10    10 [1,34]   [1,34)  \n 11    11 [1,34]   [1,34)  \n 12    12 [1,34]   [1,34)  \n 13    13 [1,34]   [1,34)  \n 14    14 [1,34]   [1,34)  \n 15    15 [1,34]   [1,34)  \n 16    16 [1,34]   [1,34)  \n 17    17 [1,34]   [1,34)  \n 18    18 [1,34]   [1,34)  \n 19    19 [1,34]   [1,34)  \n 20    20 [1,34]   [1,34)  \n 21    21 [1,34]   [1,34)  \n 22    22 [1,34]   [1,34)  \n 23    23 [1,34]   [1,34)  \n 24    24 [1,34]   [1,34)  \n 25    25 [1,34]   [1,34)  \n 26    26 [1,34]   [1,34)  \n 27    27 [1,34]   [1,34)  \n 28    28 [1,34]   [1,34)  \n 29    29 [1,34]   [1,34)  \n 30    30 [1,34]   [1,34)  \n 31    31 [1,34]   [1,34)  \n 32    32 [1,34]   [1,34)  \n 33    33 [1,34]   [1,34)  \n 34    34 [1,34]   [34,67) \n 35    35 (34,67]  [34,67) \n 36    36 (34,67]  [34,67) \n 37    37 (34,67]  [34,67) \n 38    38 (34,67]  [34,67) \n 39    39 (34,67]  [34,67) \n 40    40 (34,67]  [34,67) \n 41    41 (34,67]  [34,67) \n 42    42 (34,67]  [34,67) \n 43    43 (34,67]  [34,67) \n 44    44 (34,67]  [34,67) \n 45    45 (34,67]  [34,67) \n 46    46 (34,67]  [34,67) \n 47    47 (34,67]  [34,67) \n 48    48 (34,67]  [34,67) \n 49    49 (34,67]  [34,67) \n 50    50 (34,67]  [34,67) \n 51    51 (34,67]  [34,67) \n 52    52 (34,67]  [34,67) \n 53    53 (34,67]  [34,67) \n 54    54 (34,67]  [34,67) \n 55    55 (34,67]  [34,67) \n 56    56 (34,67]  [34,67) \n 57    57 (34,67]  [34,67) \n 58    58 (34,67]  [34,67) \n 59    59 (34,67]  [34,67) \n 60    60 (34,67]  [34,67) \n 61    61 (34,67]  [34,67) \n 62    62 (34,67]  [34,67) \n 63    63 (34,67]  [34,67) \n 64    64 (34,67]  [34,67) \n 65    65 (34,67]  [34,67) \n 66    66 (34,67]  [34,67) \n 67    67 (34,67]  [67,100]\n 68    68 (67,100] [67,100]\n 69    69 (67,100] [67,100]\n 70    70 (67,100] [67,100]\n 71    71 (67,100] [67,100]\n 72    72 (67,100] [67,100]\n 73    73 (67,100] [67,100]\n 74    74 (67,100] [67,100]\n 75    75 (67,100] [67,100]\n 76    76 (67,100] [67,100]\n 77    77 (67,100] [67,100]\n 78    78 (67,100] [67,100]\n 79    79 (67,100] [67,100]\n 80    80 (67,100] [67,100]\n 81    81 (67,100] [67,100]\n 82    82 (67,100] [67,100]\n 83    83 (67,100] [67,100]\n 84    84 (67,100] [67,100]\n 85    85 (67,100] [67,100]\n 86    86 (67,100] [67,100]\n 87    87 (67,100] [67,100]\n 88    88 (67,100] [67,100]\n 89    89 (67,100] [67,100]\n 90    90 (67,100] [67,100]\n 91    91 (67,100] [67,100]\n 92    92 (67,100] [67,100]\n 93    93 (67,100] [67,100]\n 94    94 (67,100] [67,100]\n 95    95 (67,100] [67,100]\n 96    96 (67,100] [67,100]\n 97    97 (67,100] [67,100]\n 98    98 (67,100] [67,100]\n 99    99 (67,100] [67,100]\n100   100 (67,100] [67,100]\n```\n\n\n:::\n:::\n\n\n\n\n## quantileのアルゴリズム\n\n- 1から100を4分割すると、分位点は直感的に25,50,75になると思われるが、上記の結果ではそうなっていない\n- Rの`quantile`関数は9つのアルゴリズムがあり、アルゴリズムごとに結果が異なりうる\n  - デフォルトは`type = 7`\n- 詳細は`stats::quantile`のヘルプを参照\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    0%    25%    50%    75%   100% \n  1.00  25.75  50.50  75.25 100.00 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    0%    25%    50%    75%   100% \n  1.00  25.75  50.50  75.25 100.00 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  0%  25%  50%  75% 100% \n   1   25   50   75  100 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   0%   25%   50%   75%  100% \n  1.0  25.5  50.5  75.5 100.0 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  0%  25%  50%  75% 100% \n   1   25   50   75  100 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  0%  25%  50%  75% 100% \n   1   25   50   75  100 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   0%   25%   50%   75%  100% \n  1.0  25.5  50.5  75.5 100.0 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    0%    25%    50%    75%   100% \n  1.00  25.25  50.50  75.75 100.00 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       0%       25%       50%       75%      100% \n  1.00000  25.41667  50.50000  75.58333 100.00000 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(1:100, probs = c(0, 1/4, 2/4, 3/4, 1), type = 9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      0%      25%      50%      75%     100% \n  1.0000  25.4375  50.5000  75.5625 100.0000 \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}