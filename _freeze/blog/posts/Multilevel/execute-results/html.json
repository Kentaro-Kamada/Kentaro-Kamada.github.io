{
  "hash": "4b3ee813da065c1df01d3e359e4417bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"マルチレベルモデルは点推定値に影響を及ぼすか？\"\ndate: 2024-02-22\ncategories: [Others]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lmerTest)\nlibrary(broom)\nlibrary(broom.mixed)\n```\n:::\n\n\n\n## マルチレベルモデルにおけるよくある誤解\n\n「マルチレベルモデルでやんなきゃ係数にバイアスが...」←ホント？\n\n## データ生成\n\nマルチレベルのデータを考える\nサンプルサイズ1000、グループ数50のデータ\n\n\\begin{align}\ny_{ig} \\sim 0.5x_{ig} + \\mathrm{Normal}(\\theta_g, 1) \\\\\n\\theta_g \\sim \\mathrm{Normal}(0, 3) \\\\\nx_i \\sim \\mathrm{Normal}(0, 1)\n\\end{align}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndgp <- function(samplesize = 1000) {\n  tibble(\n    id = 1:samplesize,\n    group = rep(1:50, 20),\n    x = rnorm(samplesize, mean = 0, sd = 1),\n  ) |> \n    group_by(group) |> \n    mutate(group_mean = rnorm(1, mean = 0, sd = 3)) |> \n    ungroup() |> \n    mutate(y = 0.5*x + rnorm(samplesize, mean = group_mean, sd = 1))\n}\n\ndata <- dgp()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(y ~ x, data = data) |> \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ x, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.6088 -2.3228 -0.1326  2.1536  9.9809 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.30026    0.10027  -2.994  0.00282 ** \nx            0.43733    0.09608   4.552 5.98e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.171 on 998 degrees of freedom\nMultiple R-squared:  0.02034,\tAdjusted R-squared:  0.01935 \nF-statistic: 20.72 on 1 and 998 DF,  p-value: 5.98e-06\n```\n\n\n:::\n\n```{.r .cell-code}\nlmer(y ~ x + (1|group), data = data) |> \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: y ~ x + (1 | group)\n   Data: data\n\nREML criterion at convergence: 3184.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6532 -0.6731  0.0089  0.6698  3.3401 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n group    (Intercept) 9.130    3.022   \n Residual             1.092    1.045   \nNumber of obs: 1000, groups:  group, 50\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)  -0.30028    0.42859  48.99985  -0.701    0.487    \nx             0.48207    0.03242 949.54983  14.871   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n  (Intr)\nx 0.000 \n```\n\n\n:::\n:::\n\n\n\n\n## シミュレーション\n\nデータを1000個作成\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_list <- \n  map(1:1000, \\(x) dgp(1000)) |> \n  enframe()\n```\n:::\n\n\n\nOLSと変量効果モデルで推定\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult <- \n  data_list |> \n  mutate(\n    lm = map(value, \\(data) lm(y ~ x, data = data)),\n    lmer = map(value, \\(data) lmer(y ~ x + (1|group), data = data))\n  )\n```\n:::\n\n\n\nxの係数のみ取り出す\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres2 <- \n  result |> \n  mutate(\n    lm_res = map(lm, \\(model) {\n      tidy(model) |> \n        select(term, estimate)\n    }),\n    lmer_res = map(lmer, \\(model) {\n      tidy(model) |> \n        select(term, estimate)\n    })\n  ) |> \n  select(name, lm_res, lmer_res) |> \n  pivot_longer(!name, names_to = 'model', values_to = 'value') |> \n  unnest(value) |> \n  filter(term == 'x')\n```\n:::\n\n\n\n\n結果を図示\n\n- どちらの点推定値も真の値の0.5を中心に分布＝バイアスはない\n- OLSによる点推定値はバリアンスが大きい\n- 変量効果（マルチレベル）モデルによる点推定値はバリアンスが小さい\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres2 |> \n  ggplot(aes(estimate, fill = model))+\n  geom_vline(xintercept = 0.5, linetype = 'dashed', alpha = 0.5)+\n  geom_histogram(alpha = 0.3, color = 'black', binwidth = 0.02, position = 'identity')+\n  scale_x_continuous(breaks = seq(0, 1, 0.2))\n```\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Multilevel_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}