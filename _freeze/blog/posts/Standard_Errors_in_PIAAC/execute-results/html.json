{
  "hash": "1edc1a8379a382ccfe3d94ee60d00e8f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"PIAAC、PISAの標準誤差\"\ndate: 2024-09-21\ncategories: [Statistics]\n---\n\n\n\n## 前準備\n\n### パッケージ読み込み\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(survey)\nlibrary(srvyr)\nlibrary(kamaken)\n\nkable <- partial(knitr::kable, digits = 3)\n```\n:::\n\n\n\n### データ読み込み\n\n- PIAAC 1st cycleの日本データ（SPSS形式）\n  - <https://webfs.oecd.org/piaac/puf-data/SPSS/prgjpnp1.sav>\n- 変数の名前を適宜変更しておく\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_sav('data/prgjpnp1.sav')\n# 直接読み込むこともできるが多少時間がかかる\n# data <- read_sav('https://webfs.oecd.org/piaac/puf-data/SPSS/prgjpnp1.sav')\n\ndf <- \n  data |> \n  # 変数を絞る\n  select(\n    country = CNTRYID, \n    id = SEQID,\n    age = AGE_R, \n    gender = GENDER_R, \n    region = REG_TL2, \n    edu = B_Q01a, \n    medu = J_Q06b, \n    fedu = J_Q07b, \n    numbooks = J_Q08,\n    sampling_weight = SPFWT0, \n    # 読解力、数的思考力、ITスキルのスコア\n    matches('^PV'), \n    # Replicate weights\n    matches(str_c('SPFWT', 1:80)),\n    VEMETHOD\n  ) |> \n  # 変数名を小文字に変換\n  rename_with(str_to_lower) |> \n  as_factor() |> \n  mutate(\n    # 年齢をカテゴリ化\n    agegroup = cut(\n      as.character(age) |> parse_double(), \n      breaks = c(15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65),\n      labels = c('16-20', '21-25', '26-30', '31-35', '36-40', '41-45', '46-50', '51-55', '56-60', '61-65')\n    )\n  )\n```\n:::\n\n\n\n## 分析\n\n- 点推定値\n- jackknife法による標準誤差\n\nの二つを推定する\n\n### packageによる推定\n\n- `survey`パッケージ（のラッパーの`srvyr`パッケージ）を用いる\n- `type`: 標準誤差の推定方法\n  - PIAACでは`JK1`の国と`JK2`の国が混在（変数`VEMETHOD`にどちらを使用すれば良いかが書かれている）\n  - 日本は`JK2`で推定する\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_design <- \n  df |> \n  # 調査デザインの設定\n  as_survey_rep(\n    weights = sampling_weight, \n    repweights = matches('spfwt'), \n    type = 'JK2',\n    mse = TRUE\n  )\n\nresult_literacy <- \n  df_design |> \n  # 読解力の各PVごとに平均値と標準誤差を計算\n  summarise(\n    across(matches('pvlit'), \\(x) survey_mean(x, na.rm = TRUE))\n  ) \n  \n# 結果の整理\npackage <- \n  result_literacy |>\n  rename_with(\\(x) str_replace(x, '(\\\\d)$', '\\\\1_estimate')) |>\n  # 縦持ちに変換\n  pivot_longer(\n    cols = matches('pvlit'),\n    names_to = c('literacy', '.value'),\n    names_pattern = '(pvlit\\\\d{1,2})_(.+)',\n  ) \n\nkable(package)\n```\n\n::: {.cell-output-display}\n\n\n|literacy | estimate|    se|\n|:--------|--------:|-----:|\n|pvlit1   |  296.468| 0.549|\n|pvlit2   |  296.143| 0.529|\n|pvlit3   |  296.184| 0.543|\n|pvlit4   |  296.111| 0.541|\n|pvlit5   |  296.172| 0.522|\n|pvlit6   |  296.936| 0.543|\n|pvlit7   |  295.561| 0.481|\n|pvlit8   |  296.827| 0.518|\n|pvlit9   |  296.188| 0.521|\n|pvlit10  |  295.832| 0.542|\n\n\n:::\n:::\n\n\n\n### 手作業による推定\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoint_estimate <-\n  df |> \n  select(sampling_weight, matches('(pvlit|spfwt)')) |> \n  summarise(\n    across(\n      matches('pvlit'), \n      \\(x) weighted.mean(x, w = sampling_weight, na.rm = TRUE), \n      .names = '{.col}_estimate'\n    )\n  ) |> \n  pivot_longer(\n    cols = matches('pvlit'),\n    names_to = c('literacy', '.value'),\n    names_pattern = '(pvlit\\\\d{1,2})_(.+)',\n  )\n  \n# jackknife法に用いるウェイト（80個）\njackweight <- select(df, matches('spfwt'))\n\njack_estimate <-\n  # 各ウェイトを用いて、それぞれのPVの平均値を計算\n  map(\n    jackweight, \\(weight) \n    df |> \n      summarise(\n        across(\n          matches('pvlit'),\n          \\(x) weighted.mean(x, w = weight, na.rm = TRUE),\n          .names = '{.col}_jack'\n        )\n      )\n  ) |> \n  bind_rows(.id = 'replicate') |> \n  pivot_longer(\n    cols = matches('pvlit'),\n    names_to = c('literacy', '.value'),\n    names_pattern = '(pvlit\\\\d{1,2})_(.+)',\n  )\n\nhandmade <- \n  # 点推定値にジャックナイフウェイトを用いた推定値を結合\n  left_join(\n    point_estimate, \n    jack_estimate, \n    by = join_by(literacy)\n  ) |> \n  # 標準誤差の計算\n  summarise(\n    estimate = mean(estimate),\n    se = sqrt(sum((estimate - jack)^2)),\n    .by = literacy\n  )\n\nkable(handmade)\n```\n\n::: {.cell-output-display}\n\n\n|literacy | estimate|    se|\n|:--------|--------:|-----:|\n|pvlit1   |  296.468| 0.549|\n|pvlit2   |  296.143| 0.529|\n|pvlit3   |  296.184| 0.543|\n|pvlit4   |  296.111| 0.541|\n|pvlit5   |  296.172| 0.522|\n|pvlit6   |  296.936| 0.543|\n|pvlit7   |  295.561| 0.481|\n|pvlit8   |  296.827| 0.518|\n|pvlit9   |  296.188| 0.521|\n|pvlit10  |  295.832| 0.542|\n\n\n:::\n:::\n\n\n\n### 結果の比較\n\n- 結果は一致する\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(\n  package, \n  handmade, \n  by = join_by(literacy),\n  suffix = c('_package', '_handmade')\n) |> \n  select(literacy, estimate_package, estimate_handmade, se_package, se_handmade) |>\n  mutate(\n    diff_estimate = estimate_package - estimate_handmade,\n    diff_se = se_package - se_handmade\n  ) |> \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|literacy | estimate_package| estimate_handmade| se_package| se_handmade| diff_estimate| diff_se|\n|:--------|----------------:|-----------------:|----------:|-----------:|-------------:|-------:|\n|pvlit1   |          296.468|           296.468|      0.549|       0.549|             0|       0|\n|pvlit2   |          296.143|           296.143|      0.529|       0.529|             0|       0|\n|pvlit3   |          296.184|           296.184|      0.543|       0.543|             0|       0|\n|pvlit4   |          296.111|           296.111|      0.541|       0.541|             0|       0|\n|pvlit5   |          296.172|           296.172|      0.522|       0.522|             0|       0|\n|pvlit6   |          296.936|           296.936|      0.543|       0.543|             0|       0|\n|pvlit7   |          295.561|           295.561|      0.481|       0.481|             0|       0|\n|pvlit8   |          296.827|           296.827|      0.518|       0.518|             0|       0|\n|pvlit9   |          296.188|           296.188|      0.521|       0.521|             0|       0|\n|pvlit10  |          295.832|           295.832|      0.542|       0.542|             0|       0|\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}