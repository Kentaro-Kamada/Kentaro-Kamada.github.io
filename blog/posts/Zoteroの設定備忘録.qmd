---
title: "Zoteroの設定備忘録"
date: 2021-06-05
categories: [Setup, Zotero]
---

## ようやく始めた文献管理

先日ようやく文献管理をはじめた．  
社会学周りだと，ここらへんのメソッドが全く確立されていない&共有されないので，試行錯誤が大変だった．  
以下では自分なりに見つけた方法をメモっていく．（メモらないと絶対忘れる）  

## Zoteroのインストール

なにはともあれZotero本体のインストール．  
「zotero install」みたいな感じで適当にググったら出てくる．
[https://www.zotero.org/download/](https://www.zotero.org/download/)

インストール時の注意とかも特になし．サクサク進める．

## ブラウザコネクタのインストール

Zoteroを起動して「ツール」>「ブラウザ・コネクタのインストール」をクリック．  
するとウェブブラウザが立ち上がるので，自分が使うブラウザのコネクタをインストールする．  
これも作りが丁寧でわかりやすいのでサクサク進める．  

## はじめにやっとく設定

「編集」>「設定」からやっておいた方がいい設定をいじる（Macだと「Zotero」>「環境設定」）

- 一般
  - 「ウェブページからアイテムを作成するときに自動的にスナップショットを作成する」のチェックを**外す**
  - ゴミ箱の中のアイテムを7日（お好きなように）経過で削除
- 同期
  - データの同期，作ったアカウントでログインしておく
  - ファイルの同期，すべてチェックを外す（pdfはOnedriveに保存するので使わない）
- 詳細
  - ファイルとフォルダ，リンク付き添付ファイルの基本ディレクトリを，pdfを保存したいディレクトリに設定する（自分の場合はOnedrive>Zotero）  


## アドオンのインストール

Zoteroはオープンソースなので，便利なアドオンをいろんな人が作ってくれている．  
以下ではZotFileとBetter-BibTexの二つを導入する．  

### ZotFileの導入（Zotero 7では使えないので注意！）

1. まずはアドオンをダウンロードしてくる．[http://zotfile.com/index.html#changelog](http://zotfile.com/index.html#changelog)
2. xpi形式のファイルがダウンロードされるので，適当なフォルダに保存する（自分はProgram FilesのZoteroのフォルダにAddonというフォルダを作って入れている）．  
3. Zoteroを起動し，「ツール」>「アドオン」をクリックすると現在インストールされているアドオンのリストが表示されるので，右上の歯車アイコンで「Install Add-on from File...」をクリック  
4. 先ほど保存したxpi形式のファイルを選択．Zoteroを再起動しろと言われるので，Restart nowをクリック

これでインストールは完了．

#### pdfの保存先を設定する

google scholarやjstageなどから，ブラウザコネクタを使って文献を落としてきたときに，pdfファイルを保存するフォルダを任意に設定できる．自分はOnedrive内のフォルダを指定することでiPadなどから文献にアクセスできるようにしている．  

1. 「ツール」>「ZotFile Preferences...」>「General Settings」>「Location Files」と進む  
2. Custom Locationの横のChoose...を選択し，pdfを保存したいディレクトリを選択する  
3. Use subfolder defined byにチェックを入れ，横に「/%c」と入力する  

最後の行はフォルダ内にサブフォルダを作るかどうかで，「/%c」はZoteroのコレクションに対応する形でサブフォルダを作る設定．もちろん著者（「/%a」）や年度（「/%y」）でサブフォルダを作ることもできる．  

#### pdfファイルの名前を設定する

同じくブラウザコネクタ経由で文献を落としてきたときに，pdfファイルの命名規則を定めることができる．  

1. 「ツール」>「ZotFile Preferences...」>「Renaming Rules」>「Renaming Format」と進む  
2. Use Zotero to Renameのチェックを**外す**  
3. Format for all Item Types except Patentのところに「{%a\_}{%y\_}{%t}」と入力する  

最後のところが命名規則で，「著者\_年度\_タイトル」という名前がpdfファイルにつくことになる．ここも先ほどと同じで任意に規則を作ることができる．  
命名規則を設定してから，文献を右クリックして「Manage Attachments」>「Rename Attachments」とすると，pdfファイルがリネームされる．

### Better BibTeXの導入

導入の流れは先ほどと同じ．
ダウンロード元はGithubのreleaseから．
[https://github.com/retorquere/zotero-better-bibtex/releases](https://github.com/retorquere/zotero-better-bibtex/releases)

#### Cite Keyの自動生成

Bibtexで引用する際に使用するCitekeyをいい感じで自動生成してくれる．  

1. 「編集」> 「設定」>「Better BibTeX」>「Citation keys」とすすむ
2. 「Citation key format」のところに「[Auth]-[year]」と入力
3. となりの「Export」に移って，「Fields to omit from export」のところに「abstract, doi, file」と入力
4. 「Advanced」に移って，「Ideographs in citekeys」の「Apply kuroshiro romajization in Japanese names/titles」のところにチェックをいれる

2のところがCitation keyの命名規則で，「著者-年」という形で生成される．もちろんTitleなどを組み合わせてカスタマイズできる．
3はBibtexファイルの出力時にabstractやdoiを出力しないという設定（ファイルが長くなって邪魔くさいので...）．
4は著者名に日本語が含まれている場合に読みを抽出してローマ字化し，Citation keyに利用するという設定．完全に正確ではないが，今のところは不自由なく使えていると思う．

## J-StageのTranslatorの修正

社会学だと主要な邦ジャーナルはjstageからダウンロードすることになるが，そのままだと著者名とタイトルがうまく取れないという問題がある．  

- 著者名：姓と名が反対でとれてしまう．これが連鎖的にpdfのファイル名にまで影響してくる
- タイトル：サブタイトルがとれない．このままだと手動入力することになる．  

これを，JstageのTranslatorを修正することで対応する．  
Zoteroのデータフォルダ（Windowsの場合Users）内のTranslatorsの中にある「J-Stage.js」を開く．  

87行目あたりから以下のように修正する．

```javascript
// get RIS Link
	//var bibtexurl = ZU.xpathText(doc, '//a[contains(text(), "BIB TEX")]/@href'); // コメントアウト
	var risurl = ZU.xpathText(doc, '//a[contains(text(), "RIS")]/@href'); // 追加
	// ZU.doGet(bibtexurl, function (text) { // コメントアウト
	ZU.doGet(risurl, function (text) { //追加
		// var bibtex = text; // コメントアウト
		if (text.match(/TI  - .+?\nTI  -  \n/)) { // 追加
			var bibtex = text.replace("TI  - ","TIT  - ").replace("\nTI  -  \n","\n").replace("TIT  - ","TI  - "); // 追加
		} else { // 追加
			var bibtex = text.replace("TI  - ","TIT  - ").replace("\nTI  - ","――").replace("TIT  - ","TI  - "); // 追加
		} // 追加
		// Zotero.debug(bibtex)
		var translator = Zotero.loadTranslator("import");
		// translator.setTranslator("9cb70025-a888-4a29-a210-93ec52da40d4"); // コメントアウト
		translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7");  // 追加
```

何をしているかを簡単に解説すると，まずjstageから情報を取ってくるときのソースをBibtexからRISに変更している．こうすることでBibtexに適用される日本人著者の[オリジナルルール](https://shirotakeda.org/blog-ja/?p=2638)を回避する．  
またjstageが提供するRISファイルの中身を見るとタイトルを保存するフィールド（TI）が二つ用意されていることがわかるので，二つとも埋まっている（サブタイトルがある）ときはそれを「――」でつないで結合している（7～11行目）  

## 社会学評論のcslファイル

社会学でよく使われる社会学評論スタイル準拠のCSLファイルを作ってみた．
現状，英語と日本語は別ファイルで，学術論文と本の章は対応している．（2021-08-29）

[https://github.com/Kentaro-Kamada/hyoron-style](https://github.com/Kentaro-Kamada/hyoron-style)



- jstage周りの設定について
  - [https://home.hirosaki-u.ac.jp/yaneura/353/](https://home.hirosaki-u.ac.jp/yaneura/353/)
  - [https://forums.zotero.org/discussion/5376/j-stage-translator-updated](https://forums.zotero.org/discussion/5376/j-stage-translator-updated)





